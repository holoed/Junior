import Externals (cons, isEmpty, head, tail,
                  isSpace, isLower, isUpper,
                  empty, mkTuple2, fst, snd,
                  stringToCharList, charListToString,
                  stringToInt, size, notElem, evar,
                  elitS, elit, elitVoid, eimport, eprog,
                  eapp, elet, eIfThenElse, elam, isLit,
                  isVar, isLam, isApp, isLet, isIfThenElse,
                  error, extractLet, extractLam, extractIfThenElse,
                  extractApp, extractVar, extractLit, extractProg,
                  extractImport, show, startsWith, readFile,
                  writeFile, replaceExtensionToJs)

import Parser (parse, progP)
import CodeGenerator (toJs)

let main = \progArgs ->
  let txt = readFile (fst progArgs) in
  let progAst = fst (head (parse progP (stringToCharList txt))) in
  writeFile (replaceExtensionToJs (snd progArgs)) (toJs progAst) in

()
